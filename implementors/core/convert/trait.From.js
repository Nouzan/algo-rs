(function() {var implementors = {};
implementors["my_algo"] = [{"text":"impl&lt;T&gt; From&lt;Vec&lt;T&gt;&gt; for LinkedList&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;LinkedList&lt;T&gt;&gt; for Vec&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;Vec&lt;T&gt;&gt; for LinkedList&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;LinkedList&lt;T&gt;&gt; for Vec&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone&gt; From&lt;&amp;'a mut [T]&gt; for SliceStack&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Default&gt; From&lt;&amp;'a mut [T]&gt; for DefaultSliceStack&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;PartialOrd&gt; From&lt;MyVec&lt;T&gt;&gt; for CompleteMaxHeap&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;PartialOrd + 'static&gt; From&lt;MyVec&lt;T&gt;&gt; for LeftHeap&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;Vec&lt;T&gt;&gt; for MyVec&lt;T&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()