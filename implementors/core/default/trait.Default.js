(function() {var implementors = {};
implementors["my_algo"] = [{"text":"impl&lt;T&gt; Default for LinkedList&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for LinkedList&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for LinkedList&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Stack + Default&gt; Default for DoubleStack&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K:&nbsp;Ord, V&gt; Default for RBTreeMap&lt;K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K:&nbsp;Ord, V&gt; Default for TreeMap&lt;K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Tree, K:&nbsp;Ord, V&gt; Default for RBTreeMap&lt;Tree, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Tree: Default + BinTreeMut&lt;Elem = RBEntry&lt;K, V&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K:&nbsp;Ord, V, const M:&nbsp;usize&gt; Default for BTreeMap&lt;K, V, M&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Tree:&nbsp;Default + MoveParentBinTreeMut&lt;Elem = Entry&lt;K, V&gt;&gt;, K:&nbsp;Ord, V&gt; Default for SplayTreeMap&lt;Tree, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Tree, K:&nbsp;Ord, V&gt; Default for AVLTreeMap&lt;Tree, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Tree: Default + BinTreeMut&lt;Elem = Entry&lt;K, AVLNode&lt;V&gt;&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K:&nbsp;Ord, V, Tree:&nbsp;Default + BinTreeMut&lt;Elem = Entry&lt;K, V&gt;&gt;&gt; Default for TreeMap&lt;Tree, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for DoublyLinkedBinaryTree&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for LinkedBinaryTree&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for VecBinaryTree&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for CompleteMaxHeap&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for LeftHeap&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;V, E&gt; Default for LinkedGraph&lt;V, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;G:&nbsp;Graph&gt; Default for Path&lt;G&gt;","synthetic":false,"types":[]},{"text":"impl Default for Marked","synthetic":false,"types":[]},{"text":"impl Default for Empty","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for MyVec&lt;T&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()